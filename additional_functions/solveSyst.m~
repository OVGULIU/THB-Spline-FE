function y = solveSyst(obj,Stiffn,rhs,iLvl,iBasisFctInd,dBC)
% maybe put this to other file/function /merge with assembly
[dLvl, dInd] = obj.getActiveFctIndU(obj.levelBas{1}.a);
Eval = obj.evalBasis(obj.levelBas{1}.a);
indEval = find(Eval);
fLvl = find( dLvl(indEval(1)) == iLvl);
fInd = find(dInd(indEval(1)) == iBasisFctInd);
sInd = intersect(fLvl,fInd); % start index

[dLvl, dInd] = obj.getActiveFctIndU(obj.levelBas{1}.a);
Eval = obj.evalBasis(obj.levelBas{1}.a);
indEval = find(Eval);
fLvl = find( dLvl(indEval(1)) == iLvl);
fInd = find(dInd(indEval(1)) == iBasisFctInd);
eInd = intersect(fLvl,fInd); % end index

if(dBC.mixed == true)
    A = zeros(obj.nOF +1);
    b = zeros(obj.nOF +1,1);
    if(dBC.east == 'Dirichlet' && dBC.west == 'Neumann')
        A(end,ind-1) = 1;
        A(ind-1,end) = 1;
        b(end,1) = dBC.eVal; % Dichlet BC
        A(1:end-1,2:end-1) = Stiffn;
        b(1:end-1) = rhs;
        u = A\b; 
        y = u(2:end);   
    elseif(dBC.west == 'Dirichlet' && dBC.east == 'Neumann')
        A(1,sInd+1) = 1;
        A(sInd+1,1) = 1;
        b(1,1) = dBC.wVal; % Dichlet BC
        A(2:end,2:end) = Stiffn;
        b(2:end) = rhs;
        u = A\b; 
        y = u(2:end);
    end
elseif(dBC.east == 'Dirichlet')
    A = zeros(obj.nOF +2);
    b = zeros(obj.nOF +2,1);

    
elseif(dBC.east == 'Neumann')
    y = Stiffn\b;

end

end